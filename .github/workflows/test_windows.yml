name: Windows

on:
  push:
    branches:
        - '**'
    paths-ignore:
        - docs/**
        - ChangeLog*
    tags:
        - 'v[0-9]+.[0-9]+.[0-9]+'
        - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
  pull_request:
    branches:
        - '**'
    paths-ignore:
        - docs/**
        - ChangeLog*

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
            python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
            os: [windows-latest]
            python-architecture: [x86, x64]

    steps:

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
            python-version: ${{ matrix.python-version }}
            architecture: ${{ matrix.python-architecture}}

    - name: Install OpenSSL x86
      if: matrix.python-architecture == 'x86'
      run: choco install openssl --forcex86

    - name: Install OpenSSL x64
      if: matrix.python-architecture == 'x64'
      run: choco install openssl

    - name: Install & build dependencies
      run: |
        choco install gperf
        python -m pip install --upgrade pip
        pip install -r dev/requirements-dev.txt
        python dev/build.py --ws-dir=freetds --dist-dir=dist --sdist --freetds-version="1.3.13"
        pip install pymssql --no-index -f dist
        python -c "import pymssql; print(pymssql.version_info())"

    - name: Test with pytest
      run: |
        pytest -sv

    - name: Archive wheels and sdist
      uses: actions/upload-artifact@v2
      with:
        name: pymssql-${{ runner.os }}-${{ matrix.python-architecture }}-${{ github.sha }}
        path: dist

    - name: Publish wheels
      if: github.repository_owner == 'pymssql' && startsWith(github.ref, 'refs/tags/v')
      run: |
        pip install twine --upgrade
        twine upload --skip-existing -u __token__ -p ${{secrets.PYMSSQL_PYPI_TOKEN}} dist/*.whl

    - name: Publish wheels on test.pypi.org
      if: github.repository_owner == 'pymssql' && github.ref == 'refs/heads/master'
      run: |
        pip install twine --upgrade
        twine upload --skip-existing -u __token__ -p ${{secrets.PYMSSQL_TEST_PYPI_TOKEN}} --repository-url=https://test.pypi.org/legacy/ dist/*.whl
